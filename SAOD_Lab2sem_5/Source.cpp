#include "OrgGraph.h"

/*
5. Информация о некотором изделии задана с помощью
ориентированного графа. Вершина графа соответствует отдельной
операции, а дуги показывают очередность выполнения операций
(каждая операция может начаться не ранее окончания
предшествующих операций). Продолжитель	ность каждой операции
известна. Имеется один станок для выполнения каждого типа
операций. Если станок освобождается, то
производится та из готовых к выполнению операций, для которой
наибольшая суммарная трудоемкость на путях, начинающихся от
соответствующей вершины, максимальна. Определить время
изготовления изделия. Выдать для каждого станка информацию о
последовательности операций, выполненных на данном станке.
*/


int main()
{
	bool flag = true;
	OrgGraph graph;
	int choice = -1;

	while (flag)
	{
		std::cout << "1 - Add new edge \n2 - Print graph \n3 - Task \n0 - Exit" << std::endl;

		std::cin >> choice;

		switch (choice)
		{
		case 1:
			graph.AddEdge();
			break;

		case 3:
			graph.Task();
			break;

		case 2:
			graph.ConsolePrint();
			break;

		case 0:
			flag = false;
			break;

		default:
			std::cout << "Invalid value!" << std::endl;
			break;
		}
	}

	return 0;
}

/*
оргграф
вершина - оперция, дуга - время выполнения и очередность
выполняется самая трудоемкая операция
выдать последовательность шагов
*/